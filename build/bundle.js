/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n(function (w) {\n  window.loadedBooks = window.loadedBooks || [];\n\n  function clearError() {\n    if ($(\"#error-message\").data('timer')) {\n      clearTimeout($(\"#error-message\").data('timer'));\n    }\n\n    $(\"#error-message\").fadeOut();\n  }\n\n  function setError(errorMessage) {\n    clearError();\n    $(\"#error-message\").html(errorMessage);\n    $(\"#error-message\").data('timer', setTimeout(clearError, 3000));\n    $(\"#error-message\").show();\n  }\n\n  function pageListItemToObject(item) {\n    if (!item) {\n      return null;\n    }\n\n    return {\n      keyword: item[1],\n      pages: item.slice(2)\n    };\n  }\n\n  function binary_search(array, needle) {\n    var lo = -1,\n        hi = array.length,\n        mi;\n\n    while (1 + lo < hi) {\n      mi = lo + (hi - lo >> 1);\n\n      if (array[mi][0] > needle) {\n        hi = mi;\n      } else {\n        lo = mi;\n      }\n    }\n\n    return hi;\n  }\n\n  function getPages(array, needle, collation) {\n    needle = normalizeQuery(needle, collation);\n    var next_index = binary_search(array, needle);\n    var index = next_index;\n\n    do {\n      index--;\n    } while (array[index - 1] && array[index - 1][0] === needle);\n\n    return {\n      prev: pageListItemToObject(array[index]),\n      next: pageListItemToObject(array[next_index])\n    };\n  }\n\n  function normalizeQuery_fi(e) {\n    e = e.toUpperCase(e);\n    e = e.replace(/Æ/g, \"Ä\");\n    e = e.replace(/Ø/g, \"Ö\");\n    e = e.replace(/É/g, \"E\");\n    e = e.replace(/Č/g, \"C\");\n    e = e.replace(/Š/g, \"S\");\n    e = e.replace(/Ž/g, \"Z\");\n    e = e.replace(/Ü/g, \"Y\");\n    e = e.replace(/W/g, \"V\");\n    e = e.replace(/[^A-ZÅÄÖ0-9]/g, \"\");\n    e = e.replace(/Å/g, \"a\");\n    e = e.replace(/Ä/g, \"b\");\n    e = e.replace(/Ö/g, \"c\");\n    return e;\n  }\n\n  function normalizeQuery_fi_s(e) {\n    e = e.toUpperCase(e);\n    e = e.replace(/Æ/g, \"Ä\");\n    e = e.replace(/Ø/g, \"Ö\");\n    e = e.replace(/É/g, \"E\");\n    e = e.replace(/Č/g, \"C\");\n    e = e.replace(/Ž/g, \"Z\");\n    e = e.replace(/Ü/g, \"Y\");\n    e = e.replace(/W/g, \"V\");\n    e = e.replace(/[^A-ZÅÄÖŠ0-9]/g, \"\");\n    e = e.replace(/Å/g, \"a\");\n    e = e.replace(/Ä/g, \"b\");\n    e = e.replace(/Ö/g, \"c\");\n    e = e.replace(/Š/g, \"Sh\");\n    return e;\n  }\n\n  function normalizeQuery_en(e) {\n    e = e.toUpperCase(e);\n    e = e.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    e = e.replace(/[^A-Z0-9]/g, \" \");\n    return e;\n  }\n\n  function normalizeQuery(e, collation) {\n    switch (collation) {\n      case \"fi\":\n        return normalizeQuery_fi(e);\n\n      case \"fi, s > š\":\n        return normalizeQuery_fi_s(e);\n\n      case \"sv\":\n        return normalizeQuery_fi(e);\n\n      case \"en\":\n        return normalizeQuery_en(e);\n\n      case \"la\":\n        return normalizeQuery_en(e);\n    }\n\n    throw new Error(\"Unknown collation: \" + collation);\n  }\n\n  function makeURL(pref, page) {\n    console.assert(pref.endsWith(\"/\"));\n    return pref + page + \".html\";\n  }\n\n  function getResults(hs) {\n    var result = [];\n    var books = window.loadedBooks;\n\n    var _iterator = _createForOfIteratorHelper(books),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var book = _step.value;\n        var rbook = {\n          title: book.title,\n          id: book.id,\n          urlpref: book.url,\n          parts: []\n        };\n\n        for (var i in book.parts) {\n          var bookPart = book.parts[i];\n          var pages = getPages(bookPart.pages, hs, book.collation);\n          var prev = pages.prev;\n          var next = pages.next;\n          rbook.parts.push({\n            title: bookPart.title,\n            id: book.id + '-' + i,\n            prev: prev,\n            next: next\n          });\n        }\n\n        result.push(rbook);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return result;\n  }\n\n  function $result_formatPage(keywordEntry, urlpref) {\n    var $pageLi = $(\"<li></li>\");\n\n    if (keywordEntry) {\n      $pageLi.append(keywordEntry.keyword + \": \");\n\n      var _iterator2 = _createForOfIteratorHelper(keywordEntry.pages),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var page = _step2.value;\n          $pageLi.append($('<a></a>').attr('target', '_blank').attr('rel', 'noopener').attr('href', makeURL(urlpref, page.l)).text(page.s));\n\n          if (page !== keywordEntry.pages[keywordEntry.pages.length - 1]) {\n            $pageLi.append(\", \");\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    } else {\n      $pageLi.append(\"–\");\n    }\n\n    return $pageLi;\n  }\n\n  function $result_formatPages(prev, next, urlpref) {\n    var $pagesUl = $('<ul></ul>');\n    $pagesUl.append($result_formatPage(prev, urlpref));\n    $pagesUl.append($result_formatPage(next, urlpref));\n    return $pagesUl;\n  }\n\n  function $result_formatPart(part, urlpref) {\n    var $partLi = $(\"<li></li>\").attr('id', part.id);\n    $partLi.append($(\"<span></span>\").text(part.title));\n    $partLi.append($result_formatPages(part.prev, part.next, urlpref));\n\n    if ($('[name=' + part.id + ']').attr('checked')) {\n      $partLi.show();\n    } else {\n      $partLi.hide();\n    }\n\n    return $partLi;\n  }\n\n  function $result_formatParts(parts, urlpref) {\n    var $partsUl = $('<ul></ul>');\n\n    var _iterator3 = _createForOfIteratorHelper(parts),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var part = _step3.value;\n        $partsUl.append($result_formatPart(part, urlpref));\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    return $partsUl;\n  }\n\n  function $result_formatBook(book) {\n    var $bookDiv = $(\"#book-\" + book.id);\n    var $partsUl = $result_formatParts(book.parts, book.urlpref);\n\n    if ($bookDiv.children(\"ul\").length === 0) {\n      $partsUl.hide();\n    } else {\n      $bookDiv.children(\"ul\").html(\"\");\n    }\n\n    $bookDiv.append($partsUl);\n\n    if ($('[name=' + book.id + ']').attr('checked')) {\n      $bookDiv.show();\n    } else {\n      $bookDiv.hide();\n    }\n\n    $partsUl.slideDown();\n    return $bookDiv;\n  }\n\n  function $result_formatBooks(books) {\n    var _iterator4 = _createForOfIteratorHelper(books),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var book = _step4.value;\n        $result_formatBook(book);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n\n  function $bookList_formatPart(part, partId) {\n    var $partLi = $(\"<li></li>\");\n    var $label = $('<label></label>').text(\" \" + part.title);\n    var $checkbox = $('<input type=\"checkbox\" />').attr('name', partId);\n    $checkbox.change(partSelectionChange);\n    $checkbox.attr('checked', true);\n    $label.prepend($checkbox);\n    $partLi.append($label);\n    return $partLi;\n  }\n\n  function $bookList_formatParts(parts, bookId) {\n    var $partsUl = $('<ul></ul>');\n\n    for (var i in parts) {\n      $partsUl.append($bookList_formatPart(parts[i], bookId + \"-\" + i));\n    }\n\n    return $partsUl;\n  }\n\n  function bookList_loadBook(book) {\n    var $partsUl = $bookList_formatParts(book.parts, book.id);\n    $partsUl.hide();\n    var $bookLi = $('#select-' + book.id);\n    $bookLi.append($partsUl);\n    $partsUl.slideDown();\n  }\n\n  function $booklist_formatBook(book) {\n    var $checkbox = $('<input type=\"checkbox\" />');\n    $checkbox.attr('name', book.id);\n    $checkbox.change(bookSelectionChange);\n    var $label = $('<label></label>');\n    $label.text(\" \" + book.title);\n    $label.prepend($checkbox);\n    var $bookLi = $(\"<li></li>\");\n    $bookLi.attr('id', 'select-' + book.id);\n    $bookLi.append($label);\n    return $bookLi;\n  }\n\n  function $booklist_formatBooks(books) {\n    var $booksUl = $('<ul></ul>');\n\n    var _iterator5 = _createForOfIteratorHelper(books),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var book = _step5.value;\n        $booksUl.append($booklist_formatBook(book));\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    return $booksUl;\n  }\n\n  function getQuery() {\n    var urlSearchParams = new URLSearchParams(window.location.search);\n    return Object.fromEntries(urlSearchParams.entries());\n  }\n\n  function getCheckedIds() {\n    var $cbs = $('input[type=\"checkbox\"]');\n    var list = [];\n    $cbs.each(function () {\n      if ($(this).attr('checked') === true) {\n        list.push($(this).attr('name'));\n      }\n    });\n    return list;\n  }\n\n  function getSelectedBooks() {\n    var list = getCheckedIds();\n    var books = list.filter(function (item) {\n      return item.indexOf(\"-\") === -1;\n    });\n    return books;\n  }\n\n  function getSelectedParts() {\n    var list = getCheckedIds();\n    var books = list.filter(function (item) {\n      return item.indexOf(\"-\") === -1;\n    });\n    var map = {};\n\n    var _iterator6 = _createForOfIteratorHelper(books),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var book = _step6.value;\n        map[book] = true;\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    var parts = list.filter(function (item) {\n      var bookAndPart = item.split(\"-\");\n      var book = bookAndPart[0];\n      var part = bookAndPart[1];\n      return part !== undefined && map[book];\n    });\n    return parts;\n  }\n\n  function removeUndefined(obj) {\n    var out = {};\n\n    for (var key in obj) {\n      if (obj[key] !== undefined) {\n        out[key] = obj[key];\n      }\n    }\n\n    return out;\n  }\n\n  function loadBook(bookId, shownBooks) {\n    var scriptName = \"data/\" + bookId + \".js\";\n    var d = $.Deferred();\n    var script = document.createElement('script');\n\n    script.onload = function () {\n      var $bookLi = $('#select-' + bookId);\n      var bookTitle = $bookLi.children('label').text();\n      var book = window.loadedBooks.find(function (book) {\n        return book.id === bookId;\n      });\n      book.id = bookId;\n      book.title = bookTitle;\n      $('[name=\"' + bookId + '\"]').attr('checked', true);\n      bookList_loadBook(book, shownBooks);\n      console.log(\"LOADED:\", book.id);\n      d.resolve();\n    };\n\n    script.src = scriptName;\n    document.head.appendChild(script);\n    return d;\n  }\n\n  function loadBooks(shownBooks) {\n    var loadings = [];\n\n    var _iterator7 = _createForOfIteratorHelper(shownBooks),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var bookId = _step7.value;\n\n        if (bookId.indexOf(\"-\") === -1) {\n          loadings.push(loadBook(bookId, shownBooks));\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    return $.when.apply($, loadings);\n  }\n\n  function getShownBooks(query) {\n    if (!query.show) {\n      return [];\n    }\n\n    var items = query.show.split(\" \");\n    var bookAndPartNames = items.flatMap(function (item) {\n      var bookAndParts = item.split('-');\n      var bookId = bookAndParts[0];\n      var partNums = bookAndParts.slice(1);\n      var partNames = partNums.map(function (partNum) {\n        return bookId + \"-\" + partNum;\n      });\n      return [bookId].concat(partNames);\n    });\n    return bookAndPartNames;\n  }\n\n  function addHistoryItem(state) {\n    state = removeUndefined(state);\n    history.pushState(state, '”' + state.term + '” – Hae Tietosanakirjasta', \"?\" + $.param(state).replaceAll(\"%2B\", \" \"));\n  }\n\n  function bookSelectionChange($event) {\n    var $thisCheckbox = $($event.target);\n    var bookId = $thisCheckbox.attr('name');\n    var loaded = window.loadedBooks.find(function (book) {\n      return book.id === bookId;\n    });\n    var query = getQuery();\n    var shownBooks = getSelectedBooks();\n    var $resultBlock = $('#book-' + bookId);\n    var $partsUl = $thisCheckbox.parent().next(\"ul\");\n    var $partCheckboxes = $partsUl.find('[type=\"checkbox\"]');\n    var atleastOneChecked = false;\n    $partCheckboxes.each(function () {\n      atleastOneChecked || (atleastOneChecked = $(this).attr('checked'));\n    });\n\n    if ($thisCheckbox.attr('checked') === true) {\n      if (!atleastOneChecked) {\n        $partCheckboxes.attr('checked', true);\n      }\n\n      if (!loaded) {\n        loadBook(bookId, shownBooks).then(function () {\n          submitQuery();\n        });\n      } else {\n        $partsUl.slideDown();\n\n        if ($resultBlock.length > 0) {\n          $resultBlock.slideDown();\n        } else {\n          submitQuery();\n        }\n      }\n    } else if ($thisCheckbox.attr('checked') === false) {\n      $partsUl.slideUp();\n      $resultBlock.slideUp();\n    }\n\n    addHistoryItem({\n      term: query.term,\n      show: formatUrlBooks(getSelectedParts())\n    });\n  }\n\n  function partSelectionChange($event) {\n    var $thisCheckbox = $($event.target);\n    var bookId = $thisCheckbox.attr('name');\n    var query = getQuery();\n    var $resultBlock = $('#' + bookId);\n    var $siblings = $thisCheckbox.closest('ul').find('input[type=\"checkbox\"]');\n    var $parent = $thisCheckbox.closest('ul').parent('li').children('label').find('input[type=\"checkbox\"]');\n    var atleastOneChecked = false;\n    $siblings.each(function () {\n      atleastOneChecked || (atleastOneChecked = $(this).attr('checked'));\n    });\n\n    if ($thisCheckbox.attr('checked') === true) {\n      $parent.attr('checked', true);\n      $resultBlock.slideDown();\n    } else if ($thisCheckbox.attr('checked') === false) {\n      if (!atleastOneChecked) {\n        $parent.attr('checked', false);\n      } else {\n        $resultBlock.slideUp();\n      }\n    }\n\n    addHistoryItem({\n      term: query.term,\n      show: formatUrlBooks(getSelectedParts())\n    });\n  }\n\n  function formatUrlBooks(shownBooks) {\n    var partNames = shownBooks.filter(function (bookOrPartName) {\n      return bookOrPartName.indexOf(\"-\") > -1;\n    });\n    var map = {};\n    partNames.forEach(function (partName) {\n      var p = partName.split(\"-\");\n      var bookId = p[0];\n      var partNum = p[1];\n\n      if (!map[bookId]) {\n        map[bookId] = [];\n      }\n\n      map[bookId].push(partNum);\n    });\n    var out = [];\n\n    for (var bookId in map) {\n      var parts = map[bookId].sort();\n      out.push(bookId + \"-\" + parts.join(\"-\"));\n    }\n\n    if (out.length === 0) {\n      return undefined;\n    }\n\n    return out.join(\" \");\n  }\n\n  function submitQuery($event) {\n    if ($event) {\n      $event.preventDefault();\n    }\n\n    var queryTerm = $(\"#hakusana\").val();\n\n    if (!queryTerm) {\n      return false;\n    }\n\n    var selectedBooks = getSelectedBooks();\n    var selectedParts = getSelectedParts();\n\n    if (selectedBooks.length === 0 || selectedParts.length === 0) {\n      setError(\"Virhe: Ei valittuja kirjoja tai osia. Valitse kirjat ja osat, joista haetaan.\");\n    }\n\n    $('title').text('”' + queryTerm + '” – Haku (' + selectedBooks.join(\", \") + ')');\n    var result = getResults(queryTerm);\n    $result_formatBooks(result);\n    addHistoryItem({\n      term: queryTerm,\n      show: formatUrlBooks(getSelectedParts())\n    });\n    return false;\n  }\n\n  function run() {\n    var query = getQuery();\n    $(\"#hakusana\").val(query.term || \"\");\n    $(\"#lomake\").submit(submitQuery);\n    var allBooks = [];\n    $('.book-result').each(function () {\n      var id = $(this).attr('id').replace(/^book-/, '');\n      var title = $(this).children('h2').text().trim();\n      allBooks.push({\n        id: id,\n        title: title\n      });\n    });\n    $('#sidebar').append($booklist_formatBooks(allBooks));\n    var shownBooks = getShownBooks(query);\n    loadBooks(shownBooks).then(function () {\n      submitQuery();\n    });\n  }\n\n  jQuery(document).ready(run);\n})(window);\n\n//# sourceURL=webpack://sten/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;